name: Python package
on:
  push:
    branches:
      - 'feature/**'
jobs:
  build:
    environment:
        name: feature
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 .
        continue-on-error: true
      - name: Test with pytest
        run: |
          pytest -q test_wallet.py --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml
      - name: Upload pytest test results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.python-version }}.xml
        if: ${{ always() }}
  homologacao:
    needs: build
    name: Publish QA instance
    environment:
        name: qa
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7"]
    steps:
    -  name: Set up Python ${{ matrix.python-version }}
       uses: actions/setup-python@v4
       with:
         python-version: ${{ matrix.python-version }}
    -  name: Install dependencies
       run: |
         python -m pip install --upgrade pip
         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
  zappts:
    needs: homologacao
    name: Publish Zappts instance
    environment:
        name: zappts
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7"]
    steps:
    -  name: Set up Python ${{ matrix.python-version }}
       uses: actions/setup-python@v4
       with:
         python-version: ${{ matrix.python-version }}
    -  name: Install dependencies
       run: |
         python -m pip install --upgrade pip
         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
  release:
    needs: zappts
    name: Feature ready
    environment:
      name: zappts
#      url: ${{ steps.step_id.outputs.url_output }}
    runs-on: ubuntu-latest
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - name: git
      run: |
        # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
        git --version
        git config user.name "GitHub Actions Bot"
        git config user.email "<steff.vasem@gmail.com"
#        git checkout -b fc/teste11
#        git push --set-upstream origin fc/teste11
#        git push origin --delete feature/teste
########################################################################################################
#realizar a criação da branch fc/xyz
#Deletar a branch feature/xyz
########################################################################################################
########################################################################################################
######Criando tag - depois necessário mudar para utilizar versionamento correto
########################################################################################################
#     - name: Create tag
#       uses: actions/github-script@v5
#       with:
#         script: |
#           github.rest.git.createRef({
#             owner: context.repo.owner,
#             repo: context.repo.repo,
#             ref: 'refs/tags/rc-${{  github.sha  }},
#             sha: context.sha
#           })
# ########################################################################################################