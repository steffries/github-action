name: Python package

on:
  push:
    branches:
      - 'feature/**'
jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 .
        continue-on-error: true
      - name: Test with pytest
        run: |
          pytest -q test_wallet.py --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml
      - name: Upload pytest test results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
  homologacao:
    needs: build
    name: Deploy to staging
    environment:
        name: release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7"]
    steps:
    -  name: Set up Python ${{ matrix.python-version }}
       uses: actions/setup-python@v4
       with:
         python-version: ${{ matrix.python-version }}
    -  name: Install dependencies
       run: |
         python -m pip install --upgrade pip
         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
  release:
    needs: homologacao
    name: creating feature candidate
    environment:
      name: release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        path: main
    - name: creating feature branch
      uses: peterjgrainger/action-create-branch@v2.2.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        branch: feature-candidate/${{ github.head_ref }}
    # - name: Create Pull Request
    #   uses: peter-evans/create-pull-request@v4
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.token }}
    #   with:
    #     base: feature-candidate/${{ github.head_ref }}
    #     delete-branch: false
      

    